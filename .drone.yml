---
kind: pipeline
type: docker
name: ci

platform:
  os: linux
  arch: amd64

steps:
  # FIXME: skip helm
  - name: wait-for-k3s
    image: alpine
    commands:
      - sleep 30

  - name: prepare-k3s-kubeconfig
    image: alpine
    volumes:
      - name: k3s-kubeconfig
        path: /k3s-kubeconfig
    detach: false
    commands:
      - sed -i -e "s/127.0.0.1/k3s/g" /k3s-kubeconfig/kubeconfig.yaml

  - name: test-kubernetes
    image: bitnami/kubectl:latest
    pull: true
    volumes:
      - name: k3s-kubeconfig
        path: /tmp
    environment:
      KUBECONFIG: /tmp/kubeconfig.yaml
    commands:
      - kubectl config view --minify
      - kubectl get nodes -o wide
      - kubectl create namespace ci
      - kubectl -n ci run test-pod --image alpine -- tail -f /dev/null
      - until kubectl -n ci get pod test-pod -o go-template='{{.status.phase}}' | grep 'Running'; do sleep 1s; done
      - kubectl -n ci get pods
      - kubectl -n ci exec test-pod -- echo "Hello World!"
      - kubectl get pods --all-namespaces

services:
  - name: k3s
    image: rancher/k3s:latest
    pull: true
    privileged: true
    command:
      - server
    environment:
      K3S_KUBECONFIG_OUTPUT: /k3s-kubeconfig/kubeconfig.yaml
      K3S_KUBECONFIG_MODE: 666
    volumes:
      - name: k3s-kubeconfig
        path: /k3s-kubeconfig
    ports:
      - 6443

volumes:
  - name: k3s-kubeconfig
    temp: {}
